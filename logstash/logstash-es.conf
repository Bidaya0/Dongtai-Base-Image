input {
  http {
    host => "0.0.0.0"
    port => 8082
    user => "sjkadfkjdsahfkds"
    password => "dsjkfkjsadfhkjsadhfksdsjdafjkdsagfjhsadgfjsdfg12312!"
    type => "tcp"
    codec => "json"
    }
  tcp {
    port => 8083
    type => "log"
    #codec => "json_lines"
  }
}
filter {
  if [type] == "tcp"{
    mutate {
      remove_field => ["@timestamp","@version","host","date","headers","user_agent","url","header"]
    }
    grok {
      match => {
        "log" => "%{TIMESTAMP_ISO8601:logdate}"
      }
    }
    date {
      match => ["logdate", "yyyy-MM-dd HH:mm:ss"]
      timezone => "Asia/Shanghai"
      target => "iast_timestamp"
    }
    date {
      match => ["logdate", "yyyy-MM-dd HH:mm:ss"]
    }
    grok {
      match => {
        "log" => ".*\[io.dongtai.iast.agent\] \[%{DATA:agent_log_level}\]"
      }
    }
  }
  if [type] == "log"{
    json{
      source => ["message"]
      remove_field => ["message"]
    }
  }
}
output {
  if [type] == "tcp"{
    file {
      path => ["/tmp/logstash/agent/%{[agent]}/%{+YYYY.MM.dd}.log"]
    }
    #elasticsearch {
    #  hosts => ["http://127.0.0.1:9200"]
    #  index => "iast_index_%{+YYYY.MM.dd}"
    #}
  }
  if [type] == "log"{
    #stdout { 
    #  codec => rubydebug
    #}
    analyticdb {
      driver_class => "com.mysql.jdbc.Driver"
      max_pool_size => "100"
      connection_string => "jdbc:mysql://${DATABASE}?useSSL=false"
      username => "${USERNAME}"
      password => "${PASSWORD}"
      statement => [ "INSERT IGNORE INTO `iast_agent_method_pool` (`agent_id`,`url`, `uri`, `http_method`, `http_scheme`, `http_protocol`, `req_header`, `req_params`, `req_data`, `res_header`, `res_body`, `context_path`, `method_pool`, `clent_ip`, `create_time`, `update_time`, `pool_sign`, `req_header_for_search`, `uri_sha1`) VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)","agent_id","url","uri","http_method","http_scheme","http_protocol","req_header","req_params","req_data","res_header","res_body","context_path","method_pool","clent_ip","create_time","update_time","pool_sign","req_header_for_search","uri_sha1"]
    }
    elasticsearch {
      hosts => ["${ESHOST}"]
      index => "${ESALIAS}-alias-dongtai-v1-method-pool"
      user => "${ESUSER}"
      password => "${ESPASSWORD}"
      doc_as_upsert => true
    }
  }
}
